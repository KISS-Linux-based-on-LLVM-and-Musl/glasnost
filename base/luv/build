#! /bin/sh -e

# For debug information
SCRIPT_NAME="build" && export SCRIPT_NAME

mkdir -p bin
ln -s /usr/bin/gmake "$PWD/bin/make"
export PATH="$PWD/bin:$PATH"

# patch -p1 < libuv.patch

# DEPS_SOURCE_DIR="$XDG_CACHE_HOME/kiss/sources/luv/deps"
#
# if [ -d "${DEPS_SOURCE_DIR}/luajit" ] && [ -d "${DEPS_SOURCE_DIR}/LuaJIT" ]; then
#     # rm -rf "${DEPS_SOURCE_DIR}/luajit"
#     # mv -f "${DEPS_SOURCE_DIR}/LuaJIT" "${DEPS_SOURCE_DIR}/luajit"
#     cp -rf "${DEPS_SOURCE_DIR}/LuaJIT/" "${DEPS_SOURCE_DIR}/luajit/"
#     echo ">>>>luajit overrited"
# elif [ -d "${DEPS_SOURCE_DIR}/LuaJIT" ]; then
#     mv -f "${DEPS_SOURCE_DIR}/LuaJIT" "${DEPS_SOURCE_DIR}/luajit"
#     echo ">>>>luajit renamed"
# fi

# If encountered this errors, run build again

# git submodule update --init deps/libuv
# git submodule update --init deps/luajit
# git submodule update --init deps/lua-compat-5.3
# error: could not lock config file .git/config: File exists
# error: could not lock config file .git/config: File exists
# fatal: Failed to register url for submodule path 'deps/libuv'
# make: *** [Makefile:46: deps/libuv/include] Error 128
# make: *** Waiting for unfinished jobs....
# error: could not lock config file .git/config: File exists
# fatal: Failed to register url for submodule path 'deps/lua-compat-5.3'
# make: *** [Makefile:52: deps/lua-compat-5.3/c-api] Error 128
# Terminated

# For "vm_x64.dasc" not found
# Notice that git can't modify directories outside current directory
# Moved to /usr/bin/kiss
# # TEMP="$PWD"
# # cd "$MAKE_DIR"
# git submodule init
# git submodule sync
# git submodule update --init --remote --recursive --force
# # git submodule update --init --remote --recursive --force "deps/lua"
# # git submodule update --init --remote --recursive --force "deps/libuv"
# # git submodule update --init --remote --recursive --force "deps/luajit"
# # git submodule update --init --remote --recursive --force "deps/lua-compat-5.3"
# # cd "$TEMP"
MAKE_DIR="$PWD"
pkg_name=${PWD##*/}
// log '$pkg_name' "$pkg_name"

: ${OBJ_ROOT:="$KISS_TMPDIR/objects"} && export OBJ_ROOT

OUTPUT_DIR="$OBJ_ROOT/$pkg_name" && export OUTPUT_DIR
# echo "\$OUTPUT_DIR = $OUTPUT_DIR"
// log '$OUTPUT_DIR' "$OUTPUT_DIR"

lua_header="$(grep luajit.h "$KISS_ROOT/var/db/kiss/installed/luajit/manifest")"
# lua_header_dir="${lua_header%/*}"

luajit_version="$($KISS_ROOT/usr/bin/luajit -v | awk '{print $2}')"
luajit_ver_tail="${luajit_version#*.}"
luajit_ver_tail="${luajit_ver_tail#*.}"
luajit_version="${luajit_version%".$luajit_ver_tail"}"

// log '$luajit_version' "$luajit_version"
for item in $lua_header; do
	[ ! -z "$item" ] && [ -z "${item##*"$luajit_version"*}" ] || continue
	lua_header_dir="${item%/*}"
	break
done
// log '$lua_header_dir' "$lua_header_dir"
find $OUTPUT_DIR -mindepth 1 -delete

# For "vm_x64.dasc" not found
[ -f "deps/luajit/src/vm_x64.dasc" ] || {
	// war 'vm_x64.dasc' "hard copied"
	# cp deps/luajit/src/vm_x86.dasc deps/luajit/src/vm_x64.dasc
	# Copied from moonjit
	cp vm_x64.dasc deps/luajit/src/vm_x64.dasc
}

# cmake -S. -B "$OUTPUT_DIR" -G "Ninja" \
cmake -S. -B "$OUTPUT_DIR" -G "Unix Makefiles" \
    -D CMAKE_INSTALL_PREFIX=/usr \
	-D BUILD_MODULE=ON \
	-D WITH_LUA_ENGINE=Lua \
	-D WITH_SHARED_LIBUV=ON \
	-D LUA_BUILD_TYPE=System \
    -D BUILD_SHARED_LIBS=ON \
    -D BUILD_STATIC_LIBS=ON \
    -D WITH_SHARED_LIBUV=ON \
    -D CMAKE_C_FLAGS=" -isystem $KISS_ROOT/usr/include/node -isystem $lua_header_dir $CFLAGS" \
    -D CMAKE_CXX_FLAGS=" -isystem $KISS_ROOT/usr/include/node -isystem $lua_header_dir $CXXFLAGS" \
    -D CMAKE_MAKE_PROGRAM:FILEPATH="$(which make)"

	# -D LUA_INCLUDE_DIR="$(pkg-config --variable=includedir "lua5.1")" \
	# -D BUILD_SHARED_LIBS=OFF \
    # -D BUILD_MODULE=OFF \
    # uv_file undeclared identifier
    # -isystem /usr/include/node solved it
    # -DWITH_SHARED_LIBUV=ON \

    # -DLUA_BUILD_TYPE=System \

    # -DWITH_LUA_ENGINE=Lua \
    # -DLUA_LIBRARIES=/usr/lib/lua \
    # -DLUA_INCLUDE_DIR=/usr/include \

# Won't help without submodule updating
# echo "\$PWD = "$PWD
# \cp -rf "${DEPS_SOURCE_DIR}" "$PWD/"
cd "$OUTPUT_DIR"
BUILD_MODULE=OFF \
    BUILD_SHARED_LIBS=ON \
    PREFIX="/usr" \
    DESTDIR="$1" \
    WITH_SHARED_LIBUV=ON \
    make
cd "$MAKE_DIR"
# LUA_BUILD_TYPE=System \
BUILD_MODULE=OFF BUILD_SHARED_LIBS=ON WITH_SHARED_LIBUV=ON \
    cmake --build "$OUTPUT_DIR" --target all --parallel
    # cmake --build "$OUTPUT_DIR"

# make install PREFIX="/usr" DESTDIR="$1"
cmake --build "$OUTPUT_DIR" --target install
# cmake --build "$OUTPUT_DIR" --target install --parallel
# PREFIX="/usr" DESTDIR="$1" make install




