#!/bin/sh -e

[ -z "$(find "$MAKE_DIR/musl" -type f  -maxdepth 1 -name *.patch)" ] ||
for item in *.patch; do
    echo "Applying $item"
    patch -p1 < "$item"
done

# Determine the name of the compiler-rt library
case $KISS_XHOST_ARCH in
   armv7) ABI="armhf";;
   i686)  ABI="i386";;
   *)     ABI=$KISS_XHOST_ARCH;;
esac

export CC=clang
export CXX=clang++

export KISS_XHOST_ABI="musl"

# Name of final library
libname="ld-$KISS_XHOST_ABI-$ABI.so.1"

# Uncomment if using valgrind or similar.
# :>nostrip

# Building with LTO causes segfaults
export CFLAGS="$CFLAGS -fno-lto"
CFLAGS=$(printf   %s "$CFLAGS"   | sed 's/-flto=thin//')
CXXFLAGS=$(printf %s "$CXXFLAGS" | sed 's/-flto=thin//')

export CFLAGS="$CFLAGS -fPIC"
export CXXFLAGS="$CXXFLAGS -fPIC"

./configure \
    --prefix=/usr \
    --syslibdir=/usr/lib \
    --build=$KISS_XBUILD_TRIPLE \
    --host=$KISS_XHOST_TRIPLE

make CROSS_COMPILE=""
libc=$(find . -type f -name "libc.so")
echo "libc = $libc"
if [ -n "${libc}" ]; then
    make DESTDIR="$1" install
    # Create ldd link
    mkdir -p $1/usr/bin
    ln -sf /usr/lib/ld-musl-$ABI.so.1 "$1/usr/bin/ldd"

    # Fix incorrect symlink to libc.so.
    ln -sf libc.so "$1/usr/lib/ld-musl-x86_64.so.1"

    # Install BSD compatibility headers.
    install -Dm 755 cdefs.h "$1/usr/include/sys/cdefs.h"
    install -Dm 755 queue.h "$1/usr/include/sys/queue.h"
    install -Dm 755 tree.h  "$1/usr/include/sys/tree.h"

    # Install getconf.
    ${CC:-cc} getconf.c -o "$1/usr/bin/getconf"
    ${CC:-cc} getent.c  -o "$1/usr/bin/getent"

    # Install the license
    install -Dm755 COPYRIGHT "$1/usr/share/LICENSES/musl.license"
else
    echo "Failed to generate libc.so"
    exit 1
fi
