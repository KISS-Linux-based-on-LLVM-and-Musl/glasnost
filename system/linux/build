#!/usr/bin/env sh

export LLVM=1
export LLVM_IAS=1
export CC=clang
export HOSTCC=clang
# export CFLAGS="$CFLAGS -mllvm -asan-stack=0 -fsanitize=kernel-address"
# export CFLAGS="$CFLAGS -Wframe-larger-than=8192"

build_root="${HOME}/.cache/kiss/proc/linux"
[ ! -d "${build_root}/bin" ] && mkdir -p "${build_root}/bin"
[ "$(readlink "${build_root}/bin/gunzip")" != "/usr/bin/pigz" ]  && \ln -sf "/usr/bin/pigz"  "${build_root}/bin/gunzip"
[ "$(readlink "${build_root}/bin/make")"   != "/usr/bin/gmake" ] && \ln -sf "/usr/bin/gmake" "${build_root}/bin/make"
export PATH="${build_root}/bin:$PATH"

# patch -p1 < no-perl.patch
patch -p1 < make-yacc-usage-POSIX-compliant.diff

# Determine arch
case $KISS_XHOST_ARCH in
    aarch64)     arch=arm64;;
    aarch64_be)  arch=arm64;;
    armv7)       arch=arm;;
    x86_64)      arch=x86_64;;
    powerpc64le) arch=powerpc;;
    powerpc64)   arch=powerpc;;
    powerpcle)   arch=powerpc;;
    powerpc)     arch=powerpc;;
    riscv64)     arch=riscv;;
    riscv32)     arch=riscv;;
    i686)        arch=i386;;
   *) echo "Unsupported platform: $KISS_XHOST_ARCH"; exit;;
esac

# Always use the host compiler here
make LLVM=1 LLVM_IAS=1 ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH HOSTCC="clang" headers
# https://www.kernel.org/doc/Documentation/kbuild/headers_install.txt
make headers_install ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH INSTALL_HDR_PATH=/usr
# \chown -R $USER:$USER .

# The headers require rsync for installation, this command
# simply does the equivalent using find, mkdir and cp.
pkg_dir="$1"
find usr/include -name \*.h -type f | while read -r file; do
    mkdir -p "$pkg_dir/${file%/*}"
    cp -f "$file" "$pkg_dir/$file"
done

cp config .config
cp .config oldconfig
make olddefconfig

# VERSION="$(make kernelversion)"
# Store the build version in a file and a variable.
make kernelrelease > version
read ver < version

make LLVM=1 LLVM_IAS=1 -j13
# make LLVM=1 LLVM_IAS=1 ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH HOSTCC="clang" -j13
make CC=clang HOSTCC=clang -no-intergrated-as LLVM=1 LLVM_IAS=1 modules
# make ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH CC=clang HOSTCC=clang -no-intergrated-as LLVM=1 LLVM_IAS=1 modules

doas make LLVM=1 LLVM_IAS=1 modules_install
# doas make ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH CC=clang HOSTCC=clang LLVM=1 LLVM_IAS=1 -no-intergrated-as modules_install
doas make ARCH=$arch CROSS_COMPILE=$KISS_XHOST_ARCH CC=clang HOSTCC=clang LLVM=1 LLVM_IAS=1 install

[ ! -d "/boot/efi/EFI/efistub" ] && doas mkdir -p "/boot/efi/EFI/efistub"
doas cp -f /boot/vmlinuz /boot/efi/EFI/efistub/vmlinuz.efi
# doas sh /mnt/b "kiss on nvme1" "/dev/nvme1n1" "p3" "p2"

doas cp .config /boot/config-${ver}
doas mv /boot/vmlinuz /boot/vmlinuz-${ver}
doas mv /boot/System.map /boot/System.map-${ver}
doas grub-mkconfig -o /boot/grub/grub.cfg
